import { Box } from "@mui/material";
import Head from "next/head";
import { useEffect, useRef, useState } from "react";
export default function Home() {
  const [totalButton, setTotalButton] = useState(16);
  const [col, setCol] = useState(4);
  const [totalBoom, setTotalBoom] = useState(3);
  const listBoomIndex = [];

  const initBoxGameWidth = 750;
  const boxGame = useRef();
  useEffect(() => {
    function getNumberRandom() {
      if (listBoomIndex.length >= totalBoom) return
      const number = Math.floor(Math.random() * totalButton);
      if (!listBoomIndex.includes(number)) {
        listBoomIndex.push(number);
        return;
      } else {
        getNumberRandom();
      }
    }

    for (let i = 0; i < totalBoom; i++) {
      getNumberRandom();
      console.log(i, listBoomIndex);
    }
  }, [listBoomIndex, totalBoom, totalButton]);

  useEffect(() => {
    boxGame.current.style.height = boxGame.current.clientWidth + "px";
  }, []);

  const handleButtonClick = (event,index) => {

    if (listBoomIndex.includes(index)) {
      event.target.style.opacity = 0.5;
    } else {
      event.target.style.opacity = 0;
    }
  };

  return (
    <>
      <Head>
        <title>Mini game</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box
        component="main"
        sx={{
          height: "100vh",
          alignItems: "center",
          justifyContent: "center",
          display: "flex",
        }}
      >
        <Box
          ref={boxGame}
          sx={{
            width: initBoxGameWidth,
            maxWidth: "100%",
            background: "url(images/background.webp)",
            backgroundSize: "cover",
            p: 2,
          }}
        >
          <Box
            sx={{
              background: "#bababa",
              width: "100%",
              height: "100%",
              display: "grid",
              gridTemplateColumns: `repeat(${col}, 1fr)`,
              gap: "1%",
              padding: "15px",
              cursor: "pointer",
            }}
          >
            {Array.from(Array(totalButton).keys()).map((item, index) => (
              <Box
                key={index}
                sx={{
                  background: "url(images/button.png) center no-repeat",
                  backgroundSize: "contain",
                }}
                onClick={(e) => handleButtonClick(e,index)}
              ></Box>
            ))}
          </Box>
        </Box>
      </Box>
    </>
  );
}
